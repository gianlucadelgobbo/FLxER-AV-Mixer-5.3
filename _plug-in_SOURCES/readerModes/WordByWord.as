package {	import flash.utils.*;	import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.Font;	public class WordByWord extends Sprite {		var n:uint;		var myTime:uint;		var myTxt:Array;		var txtInt:uint;				public var lab:TextField // REQUESTED		public var myTextFormat:TextFormat // REQUESTED		public function WordByWord():void {// DON'T TOUCH THIS // START //			myTextFormat = new TextFormat();			myTextFormat.size = 48;			myTextFormat.color = 0x000000;			myTextFormat.align = "center";			//			lab = new TextField();			lab.selectable = false;			setDefaultFont()			addChild(lab)			// DEBUG START			//startReader("passioni elettroniche per cuori vettorializzati, formule binarie per ridurre la complessità e scannerizzare gli stimoli ", 1000)			// DEBUG END// DON'T TOUCH THIS // END //		}		public function setDefaultFont():void { // REQUESTED FUNCTION			myTextFormat.font = Font.enumerateFonts(false)[0].fontName;			lab.embedFonts = true			lab.setTextFormat(myTextFormat);			lab.defaultTextFormat = myTextFormat		}		public function startReader(txt:String, tapValue:uint):void { // REQUESTED FUNCTION			n = 0;			myTxt = txt.split(" ");			myTime = tapValue;			myPlay();		}		public function myPlay():void { // REQUESTED FUNCTION			if (myTxt.length>0) {				clearInterval(this.txtInt);				this.txtInt = setInterval(leggi, myTime);			}		}		public function myStop():void { // REQUESTED FUNCTION			clearInterval(this.txtInt);		}		public function myRewind():void { // REQUESTED FUNCTION			this.n = 0;		}		public function leggi():void {			lab.text = myTxt[n];			if (this.n>this.myTxt.length-2) {				this.n = 0;			} else {				this.n++;			}		}	}}